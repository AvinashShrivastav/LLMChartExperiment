## Task: Extract Detailed Information from a Given Line Chart Image.

You will analyze a line chart image and generate corresponding Plotly-compatible JSON files (`data.json`, `layout.json`, and `config.json`). Follow the structured steps and specific XML-like delimiters for each JSON section as outlined below.

### Instructions:

#### Graph Analysis:

1. **Extract Data Points** for Line Chart:
   - Gather the data points for the line chart.
     - Extract `x` (categories) and `y` (values) for the line chart.

#### Generate JSON and CSV Outputs:

Follow the JSON formatting guidelines and wrap each section in the specified XML-like tags.

1. **Generate `data.json`**:
   - Include detailed information for the line chart:
     - `"type": "scatter"`
     - `"mode": "lines"`
     - `"x"`: Array of category labels for the x-axis.
     - `"y"`: Array of values for each category.

2. **Generate `layout.json`**:
   - Define the layout properties specific to the line chart.

3. **Generate `config.json`**:
   - Include settings specific to the line chart visualization.

4. **Generate `<csv>`**:
   - Format the CSV data specifically for line chart values.

### Output Format:

Wrap each JSON output in the specified XML-like tags:

- `<data> ... </data>`
- `<layout> ... </layout>`
- `<config> ... </config>`
- `<csv> ... </csv>`

Ensure the JSON format follows these rules:
- Use double quotes for all keys and string values.
- Do not include trailing commas in arrays or objects.

### Example Output:

```xml
<data>
[
  {
    "type": "scatter",
    "mode": "lines",
    "x": ["Jan", "Feb", "Mar", "Apr"],
    "y": [10, 15, 13, 17],
    "name": "Line Chart Example"
  }
]
</data>
<layout>
{
  "title": {
    "text": "Line Chart Example",
    "font": {
      "family": "Arial, sans-serif",
      "size": 24,
      "color": "#000000"
    }
  },
  "xaxis": {
    "title": {
      "text": "Months",
      "font": {
        "family": "Arial, sans-serif",
        "size": 18,
        "color": "#000000"
      }
    }
  },
  "yaxis": {
    "title": {
      "text": "Values",
      "font": {
        "family": "Arial, sans-serif",
        "size": 18,
        "color": "#000000"
      }
    }
  }
}
</layout>
<config>
{
  "responsive": true,
  "displayModeBar": true,
  "modeBarButtonsToRemove": ["toImage"],
  "scrollZoom": true
}
</config>
<csv>

Characteristic,Index (1980=100)
2020,414.09
2019,414.62
2018,402.87
2017,388.4
2016,379.01
2015,375.82
2014,385.68
2013,389.03
2012,392.07
2011,386.7
2010,355.7

</csv>
make sure csv is formatted correctly


